<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trashes on SeisMan</title>
    <link>http://blog.seisman.info/trash/</link>
    <description>Recent content in Trashes on SeisMan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 30 Mar 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.seisman.info/trash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>用 psxy 绘制铁轨线</title>
      <link>http://blog.seisman.info/trash/plot-rail-tracks/</link>
      <pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/plot-rail-tracks/</guid>
      <description>&lt;p&gt;想要绘制黑白相间的铁轨线。既然是画线，肯定要用 &lt;code&gt;psxy&lt;/code&gt; 了，但是 &lt;code&gt;psxy&lt;/code&gt;
命令自身是不支持画这种黑白相间的线的，因而就需要使用一些技巧。具体技巧如下例：&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hinet/Fnet 台站选择工具</title>
      <link>http://blog.seisman.info/trash/hinet-station-selector/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/hinet-station-selector/</guid>
      <description>&lt;p&gt;Hinet 大概有不到 800 个台站，Fnet 大概有 150 个左右的台站。在从 Hinet 网站上下载
数据时，默认是会下载所有台站的波形数据的。若只需要申请其中部分台站的数据，
则需要使用 Hinet 网站自带的台站选择工具。&lt;/p&gt;

&lt;p&gt;Hinet 网站自带的台站工具有如下优缺点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;图形界面，直观得显示了每个台站的位置&lt;/li&gt;
&lt;li&gt;无法通过某些条件进行筛选，一次只能选中或删除一个台站&lt;/li&gt;
&lt;li&gt;似乎需要一个 Java 的浏览器工具才能使用&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;因此，写了一个可以用于选择台站的 Python 工具，即 &lt;code&gt;StationSelector.py&lt;/code&gt;，其是
&lt;a href=&#34;https://github.com/seisman/HinetScripts&#34;&gt;HinetScripts&lt;/a&gt; 项目下中的一个脚本。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hinet 配置检查脚本</title>
      <link>http://blog.seisman.info/trash/hinetdoctor/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/hinetdoctor/</guid>
      <description>HinetDoctor.py 是 HinetScripts 项目中的一个 Python 脚本。 该脚本主要有如下功能： 检查 Python 版本是否大于 3.3 检查是否已安装所有依赖 检查配置文件是否可正常读取 检查账号密码是否正确，或</description>
    </item>
    
    <item>
      <title>关于博客无法访问的说明</title>
      <link>http://blog.seisman.info/trash/gfw/</link>
      <pubDate>Wed, 20 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/gfw/</guid>
      <description>最近，博客出现了无法访问的情况。就我自己遇到的情况来说，同一个实验室里，台式机连接了交换机，无法访问博客，笔记本连接了无线路由，则可以正常访</description>
    </item>
    
    <item>
      <title>GMT 5.2.1 在 Linux 下的安装</title>
      <link>http://blog.seisman.info/trash/install-gmt5.2.x-under-linux/</link>
      <pubDate>Fri, 13 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/install-gmt5.2.x-under-linux/</guid>
      <description>&lt;p&gt;**本文不再维护更新，最新版本的GMT的安装方法见 &lt;a href=&#34;http://docs.gmt-china.org/install/linux.html&#34;&gt;http://docs.gmt-china.org/install/linux.html&lt;/a&gt; **&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 为 Ubuntu 和 CentOS 用户写了一个快速安装脚本，见 &lt;a href=&#34;https://github.com/gmt-china/gmt-easy-installer&#34;&gt;gmt-easy-installer&lt;/a&gt;。有兴趣的可以试着安装，也欢迎测试各种不同的平台。&lt;/p&gt;

&lt;p&gt;本文介绍如何在 Linux 下安装 GMT 5.2.x。&lt;/p&gt;

&lt;p&gt;GMT 5.2.x 系列的安装与 GMT 5.1.x 系列的安装稍有不同，故而在前文基础上单独写一篇。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>博客开通微信公众号</title>
      <link>http://blog.seisman.info/trash/wechat-subscription/</link>
      <pubDate>Fri, 25 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/wechat-subscription/</guid>
      <description>&lt;p&gt;SeisMan 博客刚刚开通了微信公众号，欢迎大家关注。&lt;/p&gt;

&lt;p&gt;微信公众号的名字是 “SeisMan 博客”，微信号是 “seismaninfo”。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>修改 SAC 所允许的最大文件数目</title>
      <link>http://blog.seisman.info/trash/sac-change-max-file-allowed/</link>
      <pubDate>Sat, 12 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sac-change-max-file-allowed/</guid>
      <description>SAC 在处理数据时，一次性最多只能读入 1000 个 SAC 文件。当读入过多的 SAC 文件时，会出现如下警告: Max files: reading first 1000 files. 并只读入文件列表中的前 1000 个文件。 想要突破最多</description>
    </item>
    
    <item>
      <title>博客被 Google 认定为 “对用户非常有用” 啦</title>
      <link>http://blog.seisman.info/trash/google-sitelinks/</link>
      <pubDate>Wed, 29 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/google-sitelinks/</guid>
      <description>无聊的时候会在搜索引擎里以关键词 “seisman” 搜自己，看看在搜索引擎里的排名是怎样的。 从一开始的完全搜不到，到后来 Google 搜索结果中排第一，再</description>
    </item>
    
    <item>
      <title>底图边框与网格线</title>
      <link>http://blog.seisman.info/trash/frame-and-gridline/</link>
      <pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/frame-and-gridline/</guid>
      <description>&lt;p&gt;本文介绍 GMT 的 - B 选项的两种稍特殊的用法，以实现只绘制边框和只绘制网格线的目的。&lt;/p&gt;

&lt;p&gt;两点说明：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;示例采用 GMT5 语法，但方法对于 GMT4 也同样适用；&lt;/li&gt;
&lt;li&gt;想不起来当初为什么会有只绘制网格线的需求了，所以这里只写如何实现，而不说为什么会有如此奇怪的需求。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>调用 SAC 进行 Hilbert 变换</title>
      <link>http://blog.seisman.info/trash/sac-hilbert-transform/</link>
      <pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sac-hilbert-transform/</guid>
      <description>&lt;p&gt;需要在 C 程序中对数据做 Hilbert 变换，自己写显然是不可能的啦，重复造轮子不说，
写的还不一定对。找了一些代码，发现都写的好复杂，后来发现 SAC 在函数库中提供了
Hilbert 变换的接口，可以直接调用。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;firtrn&lt;/code&gt; 可以用于对数据进行 Hilbert 变换，但是官方没有给一个比较直白的例子。
下面就贴一个我写的例子啦。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GMT 5.1.2 在 Windows 下的安装</title>
      <link>http://blog.seisman.info/trash/install-gmt5-under-windows/</link>
      <pubDate>Sat, 18 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/install-gmt5-under-windows/</guid>
      <description>&lt;p&gt;本文介绍如何在 Windows 7 下安装 GMT5.1.2。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>修改 GMT 生成的 PS 文件的标题</title>
      <link>http://blog.seisman.info/trash/change-title-of-postscript-files-generated-by-gmt/</link>
      <pubDate>Sat, 14 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/change-title-of-postscript-files-generated-by-gmt/</guid>
      <description>&lt;p&gt;本文整理自： &lt;a href=&#34;http://gmt.soest.hawaii.edu/boards/1/topics/1820&#34;&gt;http://gmt.soest.hawaii.edu/boards/1/topics/1820&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;需要说明的一点，本文是要修改 PS 文件的标题，而不是 PS 文件的文件名。&lt;/p&gt;

&lt;p&gt;用编辑器打开任意一个 GMT 生成的 PS 文件，查看文件的前几行，其中一行大概如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%%Title: GMT v5.1.1 (r12968) [64-bit] Document from psxy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这就是所谓的 PS 文件的标题。当用 evince 或 gv 打开 PS 文件时，该标题会在软件的某个位置显示。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>征集《SAC 参考手册》维护者</title>
      <link>http://blog.seisman.info/trash/maintainers-for-sac-manual-wanted/</link>
      <pubDate>Sat, 07 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/maintainers-for-sac-manual-wanted/</guid>
      <description>&lt;p&gt;如题，希望能够征集到多名志愿者参与《SAC 参考手册》的维护。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GMT 边框发虚的原因及解决办法</title>
      <link>http://blog.seisman.info/trash/blurry-frame-in-gmt/</link>
      <pubDate>Tue, 09 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/blurry-frame-in-gmt/</guid>
      <description>&lt;p&gt;GMT 绘制的 PS 格式的图片一向以高精度著称。在画图的时候偶尔会遇到，PS 图片中其他地方精度都很高，唯独边框看上去有些发虚，精度比较低。&lt;/p&gt;

&lt;p&gt;上次遇到这个问题的时候，因为着急画图，所以也没细想，直接把边框发虚的图用上了。今天再次遇到这个问题，认真的想了想，找到了原因所在，也找到了解决办法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>将博文以 PDF 格式导出</title>
      <link>http://blog.seisman.info/trash/export-posts-as-pdf/</link>
      <pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/export-posts-as-pdf/</guid>
      <description>&lt;p&gt;在每篇博文的标题下方最右侧，有一个 PDF 的图标，点击即可下载当前博文的 PDF 版本。&lt;/p&gt;

&lt;p&gt;对于每篇博文，利用 &lt;a href=&#34;http://johnmacfarlane.net/pandoc/&#34;&gt;pandoc&lt;/a&gt; 将 markdown 格式的
源码转换为 PDF 格式，并将其上传到七牛云中，供读者下载。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hi-net 生成仪器响应 SAC PZ 文件</title>
      <link>http://blog.seisman.info/trash/hinet-convert-channel-table-to-sac-pz-file/</link>
      <pubDate>Sat, 13 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/hinet-convert-channel-table-to-sac-pz-file/</guid>
      <description>&lt;p&gt;前文 &lt;a href=&#34;http://blog.seisman.info/hinet-instrumental-response/&#34;&gt;Hinet 仪器响应&lt;/a&gt; 中介绍了 Hi-net 的
仪器响应的详细信息。据此，用 Python 写了一个脚本，将 Hi-net 的 Channel Table
文件转换为常用的 SAC PZ 文件。&lt;/p&gt;

&lt;p&gt;脚本位于：&lt;a href=&#34;https://github.com/seisman/HinetScripts/blob/master/ch2pz.py&#34;&gt;ch2pz.py&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hi-net WIN32 转 SAC 脚本</title>
      <link>http://blog.seisman.info/trash/hinet-convert-win32-files-to-sac/</link>
      <pubDate>Fri, 12 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/hinet-convert-win32-files-to-sac/</guid>
      <description>&lt;p&gt;该脚本用于实现 Hinet WIN32 格式到 SAC 格式的转换，脚本位于 &lt;a href=&#34;https://github.com/seisman/HinetScripts/blob/master/rdhinet.py&#34;&gt;rdhinet.py&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hi-net 事件波形数据</title>
      <link>http://blog.seisman.info/trash/hinet-event-waveform-data/</link>
      <pubDate>Wed, 03 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/hinet-event-waveform-data/</guid>
      <description>Hi-net 基于 JMA Unified Hypocenter Catalog 提供的事件信息，提供了事件波形数据。 事件波形申请地址 事件波形下载地址 查看网页源代码可以发现，申请的实质是调用另一个 openRequest 函数，其中</description>
    </item>
    
    <item>
      <title>Hi-net 走时和震源机制数据</title>
      <link>http://blog.seisman.info/trash/hinet-arrival-time-and-focal-mechanism-catalog/</link>
      <pubDate>Tue, 02 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/hinet-arrival-time-and-focal-mechanism-catalog/</guid>
      <description>&lt;p&gt;Hi-net 基于 JMA Unified Hypocenter Catalog，提供了到时数据以及震源机制解目录。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://hinetwww11.bosai.go.jp/auth/JMA/?LANG=en&#34;&gt;数据下载地址&lt;/a&gt;
&lt;a href=&#34;https://hinetwww11.bosai.go.jp/auth/manual/dlDialogue.php?r=jmaformat&amp;amp;LANG=en&#34;&gt;数据格式官方文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本文不谈数据格式，只讨论数据的下载问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JMA 统一地震目录</title>
      <link>http://blog.seisman.info/trash/jma-unified-hypocenter-catalog/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/jma-unified-hypocenter-catalog/</guid>
      <description>JMA 提供了日本及其周边地区的区域地震目录。JMA首先提供了一个初级的地震目录，并不定期发布最终版的地震目录。 Hi-net 网站中可以直接获取 JMA 初级地震目录</description>
    </item>
    
    <item>
      <title>Hinet 连续波形数据申请及下载的脚本实现</title>
      <link>http://blog.seisman.info/trash/hinet-continuous-waveform-data-request-script/</link>
      <pubDate>Sat, 30 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/hinet-continuous-waveform-data-request-script/</guid>
      <description>&lt;p&gt;前文已经说到，Hi-net 连续波形数据申请的本质可以简化为如下几步：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;指定参数，构建 query string&lt;/li&gt;
&lt;li&gt;向 Hi-net 发送数据请求&lt;/li&gt;
&lt;li&gt;等待数据准备&lt;/li&gt;
&lt;li&gt;下载数据&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 Fortran 程序中读写 SAC 文件</title>
      <link>http://blog.seisman.info/trash/sacio-fortran/</link>
      <pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sacio-fortran/</guid>
      <description>&lt;p&gt;SAC 是进行地震数据预处理的好工具，但是无法实现所有的数据分析功能，这就需要能够在自己的程序中读写 SAC 文件。这篇博文介绍如何在 Fortran 程序中读写 SAC 文件。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 C 程序中读写 SAC 文件</title>
      <link>http://blog.seisman.info/trash/sacio-c/</link>
      <pubDate>Sun, 11 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sacio-c/</guid>
      <description>&lt;h2 id=&#34;序言&#34;&gt;序言&lt;/h2&gt;

&lt;p&gt;SAC 是进行地震数据预处理的好工具，但是无法实现所有的数据分析功能，这就需要能够在自己的程序中读写 SAC 文件。这篇博文介绍如何在 C 程序中读写 SAC 文件。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GMT 在 Windows 下的中文支持</title>
      <link>http://blog.seisman.info/trash/gmt-chinese-support-under-windows/</link>
      <pubDate>Thu, 27 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/gmt-chinese-support-under-windows/</guid>
      <description>&lt;p&gt;GMT 在 Windows 下如何支持中文的问题在这篇 &lt;a href=&#34;http://xxqhome.blog.163.com/blog/static/1967330202011112810120598/&#34;&gt;博文&lt;/a&gt; 里已经说的差不多了。本文会在该博文的基础上做进一步地整理、归纳和补充。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 EPEL 和 RPMforge 源安装 netcdf 时的冲突</title>
      <link>http://blog.seisman.info/trash/epel-rpmforge-conflict/</link>
      <pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/epel-rpmforge-conflict/</guid>
      <description>&lt;p&gt;新版本的 GMT 的编译与运行要求 netCDF 的版本大于 4，且支持 netCDF4/HDF5。即如果想要手动编译 netCDF4 以上的版本，则同时需要编译 hdf5，而 hdf5 又依赖于 zlib 和 szlib 等等包，所以手动编译 netcdf 相当不合算。&lt;/p&gt;

&lt;p&gt;大多数发行版中应该都有 netcdf4，所以不会出现太多的问题。&lt;/p&gt;

&lt;p&gt;CentOS 官方源中没有 netcdf，因而需要使用第三方源，直接将别人已经编译好的文件拿过来使用。其中最常用的就是 EPEL 和 RPMforge。而恰好二者都包含了 netcdf、netcdf-devel、hdf5、hdf5-devel 包。由此引发了一些冲突。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sphinx 生成中文 PDF</title>
      <link>http://blog.seisman.info/trash/sphinx-chinese-support/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sphinx-chinese-support/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://sphinx-doc.org/&#34;&gt;sphinx&lt;/a&gt; 是 Python 提供的文档生成工具，其可以将 rST 源文件
转换成网页、PDF 等多种格式。目前，sphinx 1.3.1 在生成中文 PDF 时有一堆问题，所以
需要做一些额外的处理才能解决。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://readthedocs.org&#34;&gt;readthedocs&lt;/a&gt; 可以直接用于托管 sphinx 生成的网页文档，
由于 sphinx 不支持中文 PDF，所以 readthedocs 也不支持。readthedocs 的服务器是 Ubuntu，
具体版本未知，TeXLive 版本未知，但是肯定早于 TeXLive 2014。所以 readthedocs 上中文
支持就更是一个问题。因而在 readthedocs 网站上以及在本地，有两套不同的做法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>查看 IRIS 台站分布</title>
      <link>http://blog.seisman.info/trash/iris-station-distribution/</link>
      <pubDate>Tue, 28 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/iris-station-distribution/</guid>
      <description>&lt;p&gt;IRIS 利用 Google Map 服务，提供了直观查看台站分布的方法。&lt;/p&gt;

&lt;p&gt;主页： &lt;a href=&#34;http://www.iris.edu/gmap/&#34;&gt;http://www.iris.edu/gmap/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这个服务比较特别，不包含常见的按钮或选项。用户需要根据网站介绍的格式，创建自己需要的 URL，直接输入到浏览器中即可查看相关台站分布，并可以查看每个台站的具体信息。&lt;/p&gt;

&lt;p&gt;基本格式为:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://www.iris.edu/gmap/[network]/[station]?key1=value1&amp;amp;key2=value2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中中括号包围的项为可选项，问号后接 (key,value) 对。具体参见原网站。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GeoTiff 格式转 GMT netCDF 格式</title>
      <link>http://blog.seisman.info/trash/convert-geotiff-to-gmt/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/convert-geotiff-to-gmt/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.gdal.org/&#34;&gt;GDAL&lt;/a&gt; 提供了不少小工具，其中， &lt;code&gt;gdal_translate&lt;/code&gt; 可用于网格数据的格式转换。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SAC 容易忽略的一个陷阱</title>
      <link>http://blog.seisman.info/trash/sac-traps/</link>
      <pubDate>Sun, 17 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sac-traps/</guid>
      <description>&lt;p&gt;事情大概是这样的：当前文件夹下有很多个 SAC 文件（约 700 个，没有超过 SAC 一次只能处理 1000 个数据的限制），需要对 SAC 文件进行简单的滤波处理，然后保存。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GMT5 的图层透明效果</title>
      <link>http://blog.seisman.info/trash/gmt5-transparency/</link>
      <pubDate>Sun, 10 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/gmt5-transparency/</guid>
      <description>&lt;p&gt;设置图层的透明度，大概是 GMT5 新增的绘图功能中最大的一个亮点。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GMT 5.1.2 在 Linux 下的安装</title>
      <link>http://blog.seisman.info/trash/install-gmt5-under-linux/</link>
      <pubDate>Wed, 06 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/install-gmt5-under-linux/</guid>
      <description>&lt;p&gt;&lt;strong&gt;本文不再维护更新！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;本文介绍如何在 Linux 下安装 GMT 5.1.x。GMT 5.2.x 在 Linux 下的安装见 &lt;a href=&#34;http://blog.seisman.info/install-gmt5.2.x-under-linux/&#34;&gt;GMT 5.2.x 在 Linux 下的安装&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;仅适用于 5.1.0、5.1.1 和 5.1.2&lt;/li&gt;
&lt;li&gt;所有命令均在一般用户下完成，需要 root 权限的命令都用 &lt;code&gt;sudo&lt;/code&gt; 执行&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用 Matlab 处理 SAC 数据的一些脚本</title>
      <link>http://blog.seisman.info/trash/sac-matlab-scripts/</link>
      <pubDate>Mon, 14 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sac-matlab-scripts/</guid>
      <description>&lt;p&gt;我是那种乖乖用 SAC 处理 sac 数据的人。身边有些老师及其学生比较喜欢用 matlab 处理 sac 数据，
故而这里还是收集一下相关脚本，以造福部分人。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SAC 中与台站有关的头段</title>
      <link>http://blog.seisman.info/trash/sac-station-headers/</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sac-station-headers/</guid>
      <description>&lt;p&gt;SAC 头段中与台站有关的变量有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;KNETWK&lt;/code&gt;：台网名；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KSTNM&lt;/code&gt;：台站名；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ISTREG&lt;/code&gt;：台站地理区域（未使用）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;STLA&lt;/code&gt;：台站纬度（北为正）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;STLO&lt;/code&gt;：台站经度（东为正）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;STEL&lt;/code&gt;：台站高程（m，未使用）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;STDP&lt;/code&gt;：台站相对地表深度（m，未使用）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMPAZ&lt;/code&gt;：分量方位角；（从北开始顺时针度数）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMPINC&lt;/code&gt;：分量入射角；（从垂直开始的角度）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KCMPNM&lt;/code&gt;：分量名称，比如 BHE&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LPSPOL&lt;/code&gt;：如果台站分量为正极性则为真（左手规则）；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其中与台站分量有关的头段变量有四个，即 &lt;code&gt;CMPAZ&lt;/code&gt;、&lt;code&gt;CMPINC&lt;/code&gt;、&lt;code&gt;KCMPNM&lt;/code&gt;、&lt;code&gt;LPSPOL&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 下的 GMT 中文支持</title>
      <link>http://blog.seisman.info/trash/gmt-chinese-under-linux/</link>
      <pubDate>Tue, 13 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/gmt-chinese-under-linux/</guid>
      <description>&lt;p&gt;原生 GMT 是不支持中文的，想要让 GMT 支持中文，需要进行一番配置。想要理解整个问题，需要对
PostScript、CID 字体有更深刻的理解，这未免有些过于复杂。所以这篇博文只介绍一些基本的原理，
不一定准确但是却够用。&lt;/p&gt;

&lt;p&gt;让 GMT 支持中文，需要修改 ghostscript 和 GMT 的配置文件。由于不同发行版对 ghostscript 的打包
方式不同，不同的 ghostscript 版本之间的配置文件也有一些差异。因而这里以我在使用的 CentOS7
来介绍整个原理，&lt;strong&gt;其他发行版与CentOS7的差异会在文末列出&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SAC 保存图像小结</title>
      <link>http://blog.seisman.info/trash/sac-save-image/</link>
      <pubDate>Tue, 13 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sac-save-image/</guid>
      <description>&lt;p&gt;数据的处理很重要，数据的可视化更重要，数据可视化之后总会想把图保存起来，这里小结一下 SAC 中保存图像的方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SAC 的时间概念</title>
      <link>http://blog.seisman.info/trash/sac-times/</link>
      <pubDate>Sun, 04 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sac-times/</guid>
      <description>&lt;h2 id=&#34;时间变量&#34;&gt;时间变量&lt;/h2&gt;

&lt;p&gt;SAC 用于处理时间序列，其头段变量中与时间有关的也很多，总的来说分为 2 类：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;GMT时间&lt;/strong&gt;：绝对时间，或参考时间，包括 &lt;code&gt;NZYEAR&lt;/code&gt;、&lt;code&gt;NZJDAY&lt;/code&gt;、&lt;code&gt;NZHOUR&lt;/code&gt;、&lt;code&gt;NZMIN&lt;/code&gt;、&lt;code&gt;NZSEC&lt;/code&gt;、&lt;code&gt;NZMSEC&lt;/code&gt;，
分别代表年、日、时、分、秒、毫秒。注意这里没有月的概念，&lt;code&gt;NZJDAY&lt;/code&gt; 代表该年的第多少天。
这 6 个变量构成了一个绝对时间，这个绝对时间以更易读的形式保存在变量 &lt;code&gt;KZDATE&lt;/code&gt; 和 &lt;code&gt;KZTIME&lt;/code&gt; 中
（这两个变量虽然说是头段变量，但是在文件中实际上并不对应这两个变量的存储空间），其是
整个 SAC 文件中唯一的绝对时间，因而用作为参考时间去定义相对时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相对时间&lt;/strong&gt;：包括 &lt;code&gt;B&lt;/code&gt;、&lt;code&gt;E&lt;/code&gt;、&lt;code&gt;O&lt;/code&gt;、&lt;code&gt;A&lt;/code&gt;、&lt;code&gt;F&lt;/code&gt;、&lt;code&gt;Tn&lt;/code&gt; 等等，这些相对时间的值都是相对于绝对时间来定义的。
&lt;code&gt;O=100&lt;/code&gt; 即意味着发震时刻为参考时间加上 100 秒所对应的 GMT 时间。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GMT 使用 -K 和 -O 的技巧</title>
      <link>http://blog.seisman.info/trash/how-to-use-gmt-ko/</link>
      <pubDate>Sun, 07 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/how-to-use-gmt-ko/</guid>
      <description>&lt;p&gt;&lt;code&gt;-K&lt;/code&gt; 和 &lt;code&gt;-O&lt;/code&gt; 是 GMT 的 17 个标准选项中最常用但最容易出错的两个。本文将介绍使用
这两个选项的技巧。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>