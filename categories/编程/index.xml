<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程 on SeisMan</title>
    <link>http://blog.seisman.info/categories/%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 编程 on SeisMan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 23 Aug 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.seisman.info/categories/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python 发送邮件到 BREQ_FAST</title>
      <link>http://blog.seisman.info/python-send-mail/</link>
      <pubDate>Sat, 23 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/python-send-mail/</guid>
      <description>&lt;p&gt;利用 Python 的标准库 &lt;a href=&#34;https://docs.python.org/3/library/smtplib.html&#34;&gt;smtplib&lt;/a&gt;
实现了通过脚本发送邮件的功能。&lt;/p&gt;

&lt;p&gt;源码地址：&lt;a href=&#34;https://github.com/seisman/SeisScripts/blob/master/sendmail.py&#34;&gt;sendmail.py&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>USTC 网络通登录脚本 Python 版</title>
      <link>http://blog.seisman.info/python-ustc-wlt-login/</link>
      <pubDate>Sun, 15 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/python-ustc-wlt-login/</guid>
      <description>&lt;p&gt;最近几日在学 Python 以及相关的网页请求模块，练习着重写了 USTC 网络通的登录脚本，比之前的
Perl 版要简短了很多，其中使用了 &lt;code&gt;Requests&lt;/code&gt; 模块。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python科学计算发行版--Anaconda</title>
      <link>http://blog.seisman.info/anaconda/</link>
      <pubDate>Wed, 14 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/anaconda/</guid>
      <description>&lt;p&gt;&lt;strong&gt;推荐所有 Python 用户安装 Anaconda！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Python 是一种强大的编程语言，其提供了很多用于科学计算的模块，常见的包括
numpy、scipy 和 matplotlib。要利用 Python 进行科学计算，就需要一一安装所需的模块，
而这些模块可能又依赖于其它的软件包或库，因而安装和使用起来相对麻烦。幸好有人
专门在做这一类事情，将科学计算所需要的模块都编译好，然后打包以发行版的形式
供用户使用，Anaconda 就是最常用的科学计算发行版。&lt;/p&gt;

&lt;p&gt;主页： &lt;a href=&#34;https://store.continuum.io/cshop/anaconda/&#34;&gt;https://store.continuum.io/cshop/anaconda/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跟我一起写 Makefile (PDF 重制版)</title>
      <link>http://blog.seisman.info/how-to-write-makefile/</link>
      <pubDate>Fri, 07 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/how-to-write-makefile/</guid>
      <description>简介 《跟我一起写 Makefile》是 陈皓 发表在其 CSDN 博客上的 系列文章，一直受到读者的推荐，是很多人学习 Makefile 的首选文档。目前网络上流传的 PDF 版本多为</description>
    </item>
    
    <item>
      <title>sphinx 生成中文 PDF</title>
      <link>http://blog.seisman.info/trash/sphinx-chinese-support/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/trash/sphinx-chinese-support/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://sphinx-doc.org/&#34;&gt;sphinx&lt;/a&gt; 是 Python 提供的文档生成工具，其可以将 rST 源文件
转换成网页、PDF 等多种格式。目前，sphinx 1.3.1 在生成中文 PDF 时有一堆问题，所以
需要做一些额外的处理才能解决。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://readthedocs.org&#34;&gt;readthedocs&lt;/a&gt; 可以直接用于托管 sphinx 生成的网页文档，
由于 sphinx 不支持中文 PDF，所以 readthedocs 也不支持。readthedocs 的服务器是 Ubuntu，
具体版本未知，TeXLive 版本未知，但是肯定早于 TeXLive 2014。所以 readthedocs 上中文
支持就更是一个问题。因而在 readthedocs 网站上以及在本地，有两套不同的做法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 xeCJK 解决中文问题的最小模板</title>
      <link>http://blog.seisman.info/xeCJK-mini-template/</link>
      <pubDate>Fri, 28 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/xeCJK-mini-template/</guid>
      <description>&lt;p&gt;LaTeX 的中文支持一直是个问题，11 年左右刚开始学习 LaTeX 的时候，那时的中文解决
办法是 CJK 宏包。到了 12 年或 13 年的时候，再接触 LaTeX 的时候，LaTeX 中文支持的最优
解决办法变成了 &lt;code&gt;xeLaTeX+xeCJK&lt;/code&gt; ，这大概是目前为止最优的中文解决方案。&lt;/p&gt;

&lt;p&gt;后来，CTEX 学会将 xeCJK 的功能进行打包，发布了 ctex 宏包，进一步简化了用 LaTeX
写中文文档的问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>计算某日是一年中的第几天</title>
      <link>http://blog.seisman.info/calculate-jday/</link>
      <pubDate>Sat, 18 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/calculate-jday/</guid>
      <description>&lt;p&gt;两个子程序， &lt;code&gt;ymd2doy&lt;/code&gt; 用于从年月日计算该日为当年的第几天， &lt;code&gt;doy2ymd&lt;/code&gt; 用于根据年份以及
该年的第几天来确定月和日。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Perl 如何找出两个数组的交集、并集</title>
      <link>http://blog.seisman.info/find-intersection-and-difference-of-two-arrays/</link>
      <pubDate>Mon, 18 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/find-intersection-and-difference-of-two-arrays/</guid>
      <description>本文整理自 perlfaq4： Q：如何计算两个数组的差异、交集以及并集？ A：使用 Hash。 my (@union, @intersection, @difference); my %count = (); foreach my $element (@array1, @array2) { $count{$element}++; } foreach my $element (keys %count) { push @union, $element; push</description>
    </item>
    
    <item>
      <title>Perl 多版本共存之 plenv</title>
      <link>http://blog.seisman.info/plenv/</link>
      <pubDate>Sun, 03 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/plenv/</guid>
      <description>&lt;p&gt;官方网站：&lt;a href=&#34;https://github.com/tokuhirom/plenv&#34;&gt;https://github.com/tokuhirom/plenv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Perl 中的时间加法</title>
      <link>http://blog.seisman.info/perl-timespan/</link>
      <pubDate>Wed, 16 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/perl-timespan/</guid>
      <description>&lt;p&gt;数据申请的过程中，经常需要处理的一个问题是：已知某时刻，在该时刻的基础上加上一段时间之后对应的时刻是多少？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Perl 进度条模块</title>
      <link>http://blog.seisman.info/perl-progressbar/</link>
      <pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/perl-progressbar/</guid>
      <description>&lt;p&gt;&lt;code&gt;Term::ProgressBar&lt;/code&gt; 模块是一个可以用于生成进度条的 Perl 模块。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python 多版本共存之 pyenv</title>
      <link>http://blog.seisman.info/pyenv/</link>
      <pubDate>Fri, 04 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/pyenv/</guid>
      <description>&lt;p&gt;&lt;strong&gt;不再建议使用 pyenv，建议使用 &lt;a href=&#34;http://blog.seisman.info/anaconda/&#34;&gt;Anaconda&lt;/a&gt;&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;经常遇到这样的情况：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;系统自带的 Python 是 2.6，自己需要 Python 2.7 中的某些特性；&lt;/li&gt;
&lt;li&gt;系统自带的 Python 是 2.x，自己需要 Python 3.x；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此时需要在系统中安装多个 Python，但又不能影响系统自带的 Python，即需要实现 Python 的多版本共存。&lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;pyenv&lt;/a&gt; 就是这样一个 Python 版本管理器。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Intel 非商业开发工具</title>
      <link>http://blog.seisman.info/intel-non-commercial-software/</link>
      <pubDate>Tue, 10 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/intel-non-commercial-software/</guid>
      <description>Intel 的软件开发工具包括：C/C++ 编译器、Fortran 编译器、MKL 数学库、MPI 并行库等。 这一套开发工具价格很贵，但是 Intel 为科研工作者、学生</description>
    </item>
    
    <item>
      <title>闰年的判断</title>
      <link>http://blog.seisman.info/leap-year/</link>
      <pubDate>Sun, 04 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/leap-year/</guid>
      <description>判定某年为闰年的标准是： 能被 4 整除且不能被 100 整除的 能被 400 整除的 用 C 语言实现代码就是 if ((year % 100 != 0) &amp;amp;&amp;amp; (year % 4 == 0) || (year % 400 == 0)) { // 输出该年是闰年; }</description>
    </item>
    
    <item>
      <title>Perl 的单引号字符直接量</title>
      <link>http://blog.seisman.info/perl-single-quoted-string-literals/</link>
      <pubDate>Tue, 30 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/perl-single-quoted-string-literals/</guid>
      <description>&lt;p&gt;Perl 的字符串直接量分为两种：单引号内的和双引号内的。单引号与双引号最大的区别在于单引号限制了转义字符的功能，但是又存在一些例外。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Perl 发送邮件到 BREQ_FAST</title>
      <link>http://blog.seisman.info/perl-send-email/</link>
      <pubDate>Fri, 26 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/perl-send-email/</guid>
      <description>&lt;p&gt;BREQ_FAST 的优势在于可脚本化生成数据申请文件，要真正申请数据还得将这些文件作为邮件内容发送过去，
因而想要解放双手，利用脚本自动发送邮件是必须的。&lt;/p&gt;

&lt;p&gt;本文给出如何用 Perl 发送邮件到 BREQ_FAST，另一篇博文《&lt;a href=&#34;http://blog.seisman.info/python-send-mail/&#34;&gt;Python 发送邮件到 BREQ_FAST&lt;/a&gt;》
给出了同样功能的 Python 脚本。相比而言，Python 版本更简单、简洁。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 下安装 TeXLive 2017</title>
      <link>http://blog.seisman.info/texlive-install/</link>
      <pubDate>Thu, 11 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.seisman.info/texlive-install/</guid>
      <description>&lt;p&gt;本文将介绍如何在 Linux 下安装 TeXLive 2017。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>